'use client';

/**
 * @file This file defines the interfaces related to the Vital Sign entity.
 * It includes types for reading, creating, and updating vital sign records,
 * corresponding to the schemas in the openapi.json specification.
 */

/**
 * Defines the available types of vital signs that can be recorded.
 * Corresponds to the 'VitalSignType' enum in the API.
 */
export type VitalSignType =
    | 'Blood Pressure'
    | 'Heart Rate'
    | 'Blood Glucose'
    | 'Body Temperature'
    | 'Respiratory Rate'
    | 'Oxygen Saturation'
    | 'Weight'
    | 'Height'
    | 'Body Mass Index (BMI)'
    | 'Other';

/**
 * Represents a single vital sign record as it is read from the API.
 * Corresponds to the 'VitalSignRead' schema.
 */
export interface VitalSignRead {
  /** The unique identifier for the vital sign record (UUID). */
  uuid: string;
  /** The type of the vital sign being recorded. */
  type: VitalSignType;
  /** The primary numeric value (e.g., 120 for systolic, 95 for glucose). */
  value_numeric: number | null;
  /** The secondary numeric value (e.g., 80 for diastolic). */
  value_secondary: number | null;
  /** A composite text value if numeric fields are not used (e.g., '120/80'). */
  value_text: string | null;
  /** The unit of measurement (e.g., 'mmHg', 'kg', 'Â°C'). */
  unit: string | null;
  /** The date and time when the measurement was taken (ISO 8601 format). */
  measured_at: string;
  /** Any additional notes about the measurement. */
  notes: string | null;
  /** A flag indicating if this vital sign should be prominently displayed in an emergency context. */
  show_in_emergency: boolean;
  /** The timestamp of when the record was created (ISO 8601 format). */
  created_at: string;
}

/**
 * Defines the data structure for creating a new vital sign record.
 * It omits the 'uuid' and 'created_at' fields, which are generated by the backend.
 * Corresponds to the 'VitalSignCreate' schema.
 */
export type VitalSignCreate = Omit<VitalSignRead, 'uuid' | 'created_at'>;

/**
 * Defines the data structure for updating an existing vital sign record.
 * All fields are optional to allow for partial updates.
 * Corresponds to the 'VitalSignUpdate' schema.
 */
export interface VitalSignUpdate {
  type?: VitalSignType | null;
  value_numeric?: number | null;
  value_secondary?: number | null;
  value_text?: string | null;
  unit?: string | null;
  measured_at?: string | null;
  notes?: string | null;
  // API fields that might not be in the form but can be part of an update.
  device_name?: string | null;
  is_manual?: boolean | null;
  show_in_emergency?: boolean | null;
}
