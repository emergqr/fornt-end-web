'use client';

/**
 * @file This file defines the interfaces related to the Contact entity.
 * It includes types for reading, creating, and updating a user's contacts,
 * corresponding to the Contact schemas in the openapi.json specification.
 */

/**
 * Represents a complete contact object as it is read from the API.
 * Corresponds to the 'ContactRead' schema.
 */
export interface Contact {
  /** The full name of the contact. */
  name: string;
  /** The contact's email address. */
  email: string;
  /** The contact's phone number. */
  phone: string;
  /** The unique identifier for the contact (UUID). */
  uuid: string;
  /** The relationship of the contact to the user (e.g., 'Family', 'Doctor'). */
  relationship_type: string;
  /** A flag indicating if this is an emergency contact. */
  is_emergency_contact: boolean;
}

/**
 * Defines the data structure required to create a new contact.
 * Corresponds to the 'ContactCreate' schema.
 * The 'uuid' is omitted as it is generated by the backend upon creation.
 */
export interface ContactCreate {
  name: string;
  email: string;
  phone: string;
  relationship_type: string;
  is_emergency_contact?: boolean;
}

/**
 * Defines the data structure for updating an existing contact.
 * It uses TypeScript's Partial utility type to make all fields of ContactCreate optional,
 * allowing for partial updates.
 * Corresponds to the 'ContactUpdate' schema.
 */
export type ContactUpdate = Partial<ContactCreate>;
